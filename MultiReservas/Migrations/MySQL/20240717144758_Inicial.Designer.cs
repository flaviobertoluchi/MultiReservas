// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MultiReservas.Data.Context;

#nullable disable

namespace MultiReservas.Migrations.MySQL
{
    [DbContext(typeof(MySQLContext))]
    [Migration("20240717144758_Inicial")]
    partial class Inicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("MultiReservas.Models.Configuracao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("NomeLocais")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("QuantidadeLocais")
                        .HasColumnType("int");

                    b.Property<int?>("ReservasPorLocal")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Configuracoes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            QuantidadeLocais = 50
                        });
                });

            modelBuilder.Entity("MultiReservas.Models.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<decimal>("Preco")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Itens");
                });

            modelBuilder.Entity("MultiReservas.Models.Reserva", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataFim")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Local")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Observacao")
                        .HasMaxLength(2000)
                        .HasColumnType("varchar(2000)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Reservas");
                });

            modelBuilder.Entity("MultiReservas.Models.ReservaItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.Property<int>("ReservaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("ReservaId");

                    b.ToTable("ReservaItens");
                });

            modelBuilder.Entity("MultiReservas.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("AdicionarItensReserva")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("AdicionarReservas")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("CancelarReservas")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Configuracao")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("EditarReservas")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("FinalizarReservas")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Itens")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<bool>("PaginaInicial")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("RemoverItensReserva")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Reservas")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<bool>("Usuarios")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AdicionarItensReserva = true,
                            AdicionarReservas = true,
                            Ativo = true,
                            CancelarReservas = true,
                            Configuracao = true,
                            EditarReservas = true,
                            FinalizarReservas = true,
                            Itens = true,
                            Login = "admin",
                            PaginaInicial = true,
                            RemoverItensReserva = true,
                            Reservas = true,
                            Senha = "7a8b097ac97ab751667457209d1f714d7473283c000dee9e3cd2c59fa6977b40",
                            Usuarios = true
                        });
                });

            modelBuilder.Entity("MultiReservas.Models.Reserva", b =>
                {
                    b.HasOne("MultiReservas.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("MultiReservas.Models.ReservaItem", b =>
                {
                    b.HasOne("MultiReservas.Models.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MultiReservas.Models.Reserva", "Reserva")
                        .WithMany("ReservaItens")
                        .HasForeignKey("ReservaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("Reserva");
                });

            modelBuilder.Entity("MultiReservas.Models.Reserva", b =>
                {
                    b.Navigation("ReservaItens");
                });
#pragma warning restore 612, 618
        }
    }
}
